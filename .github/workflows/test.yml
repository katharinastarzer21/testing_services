name: Test Dask Gateway (CI-local Pushgateway)

on:
  workflow_dispatch:
  push:
    paths:
      - 'scripts/**'
      - 'tests/**'

jobs:
  e2e:
    runs-on: ubuntu-latest

    # Startet einen Pushgateway-Container NUR für diesen Job
    services:
      pushgateway:
        image: prom/pushgateway:latest
        ports:
          - 9091:9091

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install prometheus-client

      # (Optional) Demo-Log sicherstellen – ersetze das mit deinem Testlauf
      - name: Ensure there is at least one log line
        run: |
          mkdir -p results/logs
          date '+%Y-%m-%d %H:%M:%S, SUCCESS, demo' >> results/logs/test_dask_gateway.log

      - name: Pushgateway ready?
        run: |
          curl -sS http://localhost:9091/-/ready

      - name: Convert logs to metrics (push to service)
        env:
          PUSHGATEWAY_URL: http://localhost:9091
          E2E_ENV: dev
          LOG_DIR: results/logs
          WINDOW_MINUTES: "60"
        run: |
          ls -la results/logs || true
          tail -n +1 results/logs/*.log || true
          python scripts/logs_to_metrics.py

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_id }}
          path: results/logs/*.log
          if-no-files-found: warn
